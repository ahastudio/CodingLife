/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    // Use Spring framework
    implementation("org.springframework:spring-core:6.1.13")
    implementation("org.springframework:spring-context:6.1.13")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "com.example.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register<Copy>("copyDependencies") {
    from(configurations.runtimeClasspath)
    into("build/dependencies")
}

tasks.withType<Jar> {
    manifest {
        attributes["Main-Class"] = "com.example.App"
    }
}

tasks.register<Jar>("fatJar") {
    archiveBaseName = "fat-app"

    with(tasks.jar.get())

    from(
        configurations.runtimeClasspath.get().map {
            if (it.isDirectory) it
            else zipTree(it)
        }
    )

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
